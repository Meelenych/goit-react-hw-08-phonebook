{"version":3,"sources":["redux/contacts/slice.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js"],"names":["contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","createContact","mutation","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useCreateContactMutation","useDeleteContactMutation","ContactForm","isLoading","handleSubmit","e","a","preventDefault","currentTarget","elements","value","reset","onSubmit","type","pattern","title","required","color","height","width","timeout","Filter","onChange","ContactList","data","onDelete","deleting","map","id","onClick","className","App","useState","filter","setFilter","isFetching","isDeleting","console","log","target","contacts","normalizedFilter","toLowerCase","includes","getFilteredElems","store","configureStore","reducer","middleware","getDefaultMiddleware","devtools","process","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEaA,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,iDAEXC,SAAU,CAAC,YACXC,UAAW,SAACC,GAAD,MAAc,CACvBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,cAEjBC,cAAeJ,EAAQK,SAAS,CAC9BH,MAAO,kBAAuB,CAC5BI,IAAK,YACLC,OAAQ,OACRC,KAAM,CAAEC,KAHH,EAAGA,KAGMC,OAHT,EAASA,UAKhBC,gBAAiB,CAAC,cAEpBC,cAAeZ,EAAQK,SAAS,CAC9BH,MAAO,SAACW,GAAD,MAAgB,CACrBP,IAAI,aAAD,OAAeO,GAClBN,OAAQ,WAEVI,gBAAiB,CAAC,kBAMtBG,EAGEtB,EAHFsB,sBACAC,EAEEvB,EAFFuB,yBACAC,EACExB,EADFwB,yB,gCC9Ba,SAASC,IACtB,MAAuCF,IAAvC,mBAAOX,EAAP,KAAwBc,EAAxB,KAAwBA,UAElBC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAEE,iBAEFlB,EAAc,CACZK,KAAMW,EAAEG,cAAcC,SAASf,KAAKgB,MACpCf,OAAQU,EAAEG,cAAcC,SAASd,OAAOe,QAE1CL,EAAEG,cAAcG,QAPG,2CAAH,sDAUlB,OACE,qCACE,2CACA,uBAAMC,SAAUR,EAAhB,UACE,yCAEE,uBACES,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,2CAEE,uBACEH,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQH,KAAK,SAAb,SACGV,EACC,cAAC,IAAD,CACEU,KAAK,OACLI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGX,sBCnDG,SAASC,EAAT,GAAsC,IAApBC,EAAmB,EAAnBA,SAAUZ,EAAS,EAATA,MACzC,OACE,mCACE,0DAEE,uBAAOG,KAAK,OAAOH,MAAOA,EAAOY,SAAUA,SCHpC,SAASC,EAAT,GAAoD,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACpD,OACE,qCACE,0CACA,6BACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIlC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACR,+BACE,4CAAQD,EAAR,aAAiBC,MAEjB,wBACEiC,GAAIA,EACJC,QAAS,kBAAMJ,EAASG,IACxBf,KAAK,SACLiB,UAAU,MAJZ,SAMGJ,EACC,cAAC,IAAD,CACEb,KAAK,OACLI,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGX,aAlBGQ,W,MCAJ,SAASG,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA6BnC,IAArByB,EAAR,EAAQA,KAAMW,EAAd,EAAcA,WACd,EAAmDlC,IAAnD,mBAAOJ,EAAP,KAAmCuC,EAAnC,KAAwBjC,UAExBkC,QAAQC,IAAIvC,KAUZ,OACE,sBAAK+B,UAAU,YAAf,UACE,cAAC5B,EAAD,IACA,cAACmB,EAAD,CAAQC,SAAU,SAACjB,GAAD,OAAO6B,EAAU7B,EAAEkC,OAAO7B,UAC3CyB,EACC,4CAEA,cAACZ,EAAD,CACEC,KAhBiB,SAACgB,GACxB,IAAMC,EAAmBR,EAAOS,cAEhC,OAAOF,EAASP,QAAO,qBAAGvC,KACnBgD,cAAcC,SAASF,MAYlBG,CAAiBpB,GACvBC,SAAU5B,EACV6B,SAAUU,O,kCC/BPS,EAAQC,YAAe,CAClCC,QAAQ,eACLtE,EAAYE,YAAcF,EAAYsE,SAEzCC,WAAY,SAACC,GAAD,4BACPA,KADO,CAEVxE,EAAYuE,cAGdE,UAAUC,IAGZC,YAAeP,EAAMQ,UCVrBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJY,SAASC,eAAe,W","file":"static/js/main.b0dfb194.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contactsApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://61d338ddb4c10c001712b88f.mockapi.io/\",\n  }),\n  tagTypes: [\"Contacts\"],\n  endpoints: (builder) => ({\n    fetchContacts: builder.query({\n      query: () => \"/contacts\",\n      providesTags: [\"Contacts\"],\n    }),\n    createContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: { name, number },\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n  useDeleteContactMutation,\n} = contactsApi;\n","import { useCreateContactMutation } from \"../../redux/contacts/slice\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default function ContactForm() {\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    createContact({\n      name: e.currentTarget.elements.name.value,\n      number: e.currentTarget.elements.number.value,\n    });\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">\n          {isLoading ? (\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          ) : (\n            \"Add contact\"\n          )}\n        </button>\n      </form>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Filter({ onChange, value }) {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onChange} />\n      </label>\n    </>\n  );\n}\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default function ContactList({ data, onDelete, deleting }) {\n  return (\n    <>\n      <h1>Contacts</h1>\n      <ul>\n        {data.map(({ id, name, number }) => (\n          <li key={id}>\n            <p> {`${name}: ${number}`}</p>\n\n            <button\n              id={id}\n              onClick={() => onDelete(id)}\n              type=\"button\"\n              className=\"btn\"\n            >\n              {deleting ? (\n                <Loader\n                  type=\"Puff\"\n                  color=\"#00BFFF\"\n                  height={100}\n                  width={100}\n                  timeout={3000} //3 secs\n                />\n              ) : (\n                \"Delete\"\n              )}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from \"./redux/contacts/slice\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [filter, setFilter] = useState(\"\");\n  const { data, isFetching } = useFetchContactsQuery();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  console.log(useFetchContactsQuery());\n\n  const getFilteredElems = (contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <ContactForm />\n      <Filter onChange={(e) => setFilter(e.target.value)} />\n      {isFetching ? (\n        <h1>Loading...</h1>\n      ) : (\n        <ContactList\n          data={getFilteredElems(data)}\n          onDelete={deleteContact}\n          deleting={isDeleting}\n        />\n      )}\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport { contactsApi } from \"./contacts/slice\";\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n\n  devtools: process.env.NODE_ENV === \"development\",\n});\n\nsetupListeners(store.dispatch);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}